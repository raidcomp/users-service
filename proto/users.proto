syntax = "proto3";
package users;

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/raidcomp/users-service";

service Users {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}

  // Get a User by ID or login.
  // Will check by ID first, then login.
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}

  // Check password by ID or login.
  // Will check by ID first, then login.
  rpc CheckUserPassword(CheckUserPasswordRequest) returns (CheckUserPasswordResponse) {}
}

message User {
  string id = 1;
  string login = 2;
  string email = 3;
  google.protobuf.Timestamp createdAt = 4;
  google.protobuf.Timestamp updatedAt = 5;
}

message CreateUserRequest {
  /*
    1) Number of characters must be between 6 to 20 inclusive.
    2) Only contains alphanumeric characters, underscore and dot.
    3) Underscore and dot can't be at the end or start of a login (e.g _login / login_ / .login / login.).
    4) Underscore and dot can't be next to each other (e.g log_.in).
    5) Underscore or dot can't be used multiple times in a row (e.g log__in / log..in).
     */
  string login = 1 [(validate.rules).string = {
    min_len: 6,
    max_len: 25,
  }];
  string email = 2 [(validate.rules).string.email = true];
  /*
    1) Number of characters must be between 8 to 40 inclusive.
    2) Must contain 1 lowercase character.
    3) Must contain 1 uppercase character.
    4) Must contain 1 special character.
     */
  string password = 3 [(validate.rules).string = {
    min_len: 8,
    max_len: 40,
  }];
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
  string login = 2;
}

message GetUserResponse {
  User user = 1;
}

message CheckUserPasswordRequest {
  string id = 1;
  string login = 2;
  string password = 3;
}

message CheckUserPasswordResponse {}